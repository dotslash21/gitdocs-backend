#
# Server Configuration
#
quarkus.http.port=${PORT:8080}
#
# OIDC Configuration
#
quarkus.oidc.auth-server-url=${AUTHSERVER:https://gitdocs-dev.au.auth0.com}
quarkus.oidc.client-id=${CLIENTID:DZetV3EFaPa4HxSwACs65rsKBbcukvLt}
quarkus.oidc.token.audience=${AUDIENCE:https://gitdocs-backend-dev.arunangshu.dev}
quarkus.oidc.authentication.user-info-required=true
quarkus.oidc.roles.role-claim-path="${quarkus.oidc.token.audience}/roles"
#
# Logging Configuration
#
# DEV ONLY - START
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".min-level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcRecorder".level=TRACE
quarkus.log.category."io.quarkus.oidc.runtime.OidcRecorder".min-level=TRACE
quarkus.log.min-level=TRACE
# DEV ONLY - END
#
# Datasource configuration
#
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=${MYSQL_USER:gitdocs}
quarkus.datasource.password=${MYSQL_PASSWORD:sr7v55ob5y8u99zg}
quarkus.datasource.jdbc.url=${MYSQL_URL:jdbc:mysql://localhost:3306/gitdocs?useSSL=false}
#
# Hibernate configuration
#
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
# DEV ONLY - START
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true
# DEV ONLY - END